# ===============================================================
# ONLINE HOTEL RESERVATION SYSTEM - APPLICATION PROPERTIES
# ===============================================================
# Properties file for hotel reservation system
# ===============================================================

# ======================
# APPLICATION CONFIG
# ======================
# Basic application settings
spring.application.name=hotel-reservation
server.port=8080
# Application context path (uncomment if needed)
#server.servlet.context-path=/reservation

# System-wide default settings
# These are fallback values; actual data should be stored in the database per hotel
system.default.checkin.time=14:00
system.default.checkout.time=12:00
system.default.booking.max-days-ahead=365
system.default.cancellation.deadline.hours=24
system.admin.contact.email=admin@hotelreservation.com

# ======================
# DATABASE CONFIG
# ======================
# MySQL database connection
spring.datasource.url=jdbc:mysql://localhost:3306/hotel_reservation?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=StrongPassword123!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000

# JPA/Hibernate settings
# 'update' is safe for development: creates/updates tables automatically
spring.jpa.hibernate.ddl-auto=update
# Show and format SQL in logs (helpful for debugging)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# MySQL dialect setting
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# Performance settings
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.open-in-view=false
# Initialize database with data.sql (set to 'always' to run every time)
spring.sql.init.mode=never
spring.sql.init.platform=mysql

# ======================
# THYMELEAF CONFIG
# ======================
# Template engine settings (for web pages)
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.mode=HTML

# ======================
# SPRING SECURITY CONFIG
# ======================
# Security settings for authentication/authorization
# Default users (REMOVE IN PRODUCTION!)
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN
# Session management
server.servlet.session.timeout=30m
# CSRF protection enabled by default
#spring.security.csrf.enabled=true
# Remember me functionality (30 days)
spring.security.remember-me.token-validity-seconds=2592000
# Account lockout policy (custom properties)
security.account.max-failed-attempts=5
security.account.lock-duration-minutes=30

# ======================
# RESOURCES CONFIG
# ======================
# Static resources (CSS, JS, images)
spring.web.resources.static-locations=classpath:/static/
# No caching during development
spring.web.resources.cache.period=0
# Resource chain optimization
spring.web.resources.chain.enabled=true
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.compressed=true

# ======================
# FILE UPLOAD CONFIG
# ======================
# For hotel/room images and documents
file.upload-dir=src/main/resources/static/uploads/images
file.allowed-types=image/jpeg,image/png,image/gif
# Maximum file size for upload (10MB)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB

# ======================
# EMAIL CONFIG
# ======================
# Email configuration for booking confirmations & notifications
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=notifications@hotelreservation.com
spring.mail.password=YourAppPassword
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=5000
# Email templates location
email.template.confirmation=email/booking-confirmation
email.template.cancellation=email/booking-cancellation
# Enable/disable email sending (for testing)
email.sending.enabled=true

# ======================
# PAYMENT INTEGRATION
# ======================
# Payment processor configuration (simulated for project)
payment.processor=SIMULATED
# Available payment methods
payment.methods=CREDIT_CARD,MOBILE_MONEY,BANK_TRANSFER
# For simulation purposes
payment.simulation.success-rate=90
payment.simulation.processing-time-ms=2000
# Mobile money providers (common providers)
payment.momo.providers=MTN,ORANGE,YOOMEE

# ======================
# API DOCUMENTATION
# ======================
# Swagger/OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
# API info
springdoc.info.title=Hotel Reservation API
springdoc.info.description=API for Online Hotel Reservation System
springdoc.info.version=1.0.0
springdoc.info.contact.name=System Administrator
springdoc.info.contact.email=admin@hotelreservation.com

# ======================
# BOOKING SPECIFIC CONFIG
# ======================
# System-wide booking settings
# These can be overridden per hotel in the database
# Minimum advance booking (in hours)
booking.min-hours-in-advance=4
# Maximum guests per standard room (can be overridden per room type)
booking.default.max-guests-per-room=4
# Default search radius (in km)
booking.search.default-radius-km=10
# Booking number generation settings
booking.number.prefix=RES
booking.number.length=8
# Enable real-time availability checking
booking.realtime-availability=true
# Show estimated price before taxes/fees
booking.show-estimated-total=true

# ======================
# INTERNATIONALIZATION
# ======================
# Message resources for multi-language support
spring.messages.basename=i18n/messages
spring.messages.fallback-to-system-locale=false
spring.messages.encoding=UTF-8
# Available locales (add more as needed)
application.locales=en,fr,es,de,zh

# ======================
# CACHING CONFIG
# ======================
# Cache settings for better performance
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=60s
# Cache names
spring.cache.cache-names=hotelSearchResults,availableRooms,popularLocations

# ======================
# RATING & REVIEW CONFIG
# ======================
# Settings for the review system
# Minimum length for review comments
review.comment.min-length=10
# Maximum length for review comments
review.comment.max-length=500
# Allow anonymous reviews
review.allow-anonymous=false
# Time window to post review after checkout (in days)
review.window-days=14
# Rating scale (1-5 stars)
review.rating.min=1
review.rating.max=5

# ======================
# LOGGING CONFIGURATION
# ======================
# Logging levels
logging.level.root=INFO
# Application-specific package (update with your actual package structure)
logging.level.com.hotelreservation=DEBUG
# Framework logging
logging.level.org.springframework=WARN
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Console output formatting
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) [%thread] %cyan(%logger{15}) - %msg%n

# File logging configuration
logging.file.name=logs/hotel-reservation.log
logging.file.max-size=10MB
logging.file.max-history=7
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ======================
# DEV TOOLS & PROFILES
# ======================
# Enable automatic restart during development
spring.devtools.restart.enabled=true
# Active profile (dev, test, or prod)
spring.profiles.active=dev

# ======================
# MANAGEMENT & MONITORING
# ======================
# Actuator endpoints for system monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
# Application info (shown in /actuator/info)
management.info.env.enabled=true
info.app.name=${spring.application.name}
info.app.description=Online Hotel Reservation System
info.app.version=1.0.0